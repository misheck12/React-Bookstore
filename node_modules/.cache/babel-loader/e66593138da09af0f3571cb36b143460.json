{"ast":null,"code":"import bindActionCreators from '../utils/bindActionCreators';\nimport { wrapMapToPropsConstant, wrapMapToPropsFunc } from './wrapMapToProps';\nimport { createInvalidArgFactory } from './invalidArgFactory';\nexport function mapDispatchToPropsFactory(mapDispatchToProps) {\n  return mapDispatchToProps && typeof mapDispatchToProps === 'object' ? wrapMapToPropsConstant(dispatch => // @ts-ignore\n  bindActionCreators(mapDispatchToProps, dispatch)) : !mapDispatchToProps ? wrapMapToPropsConstant(dispatch => ({\n    dispatch\n  })) : typeof mapDispatchToProps === 'function' ? // @ts-ignore\n  wrapMapToPropsFunc(mapDispatchToProps, 'mapDispatchToProps') : createInvalidArgFactory(mapDispatchToProps, 'mapDispatchToProps');\n}","map":{"version":3,"sources":["/home/hp/MICROVERSE/React.js/week3/solo-projects/React-Bookstore/node_modules/react-redux/es/connect/mapDispatchToProps.js"],"names":["bindActionCreators","wrapMapToPropsConstant","wrapMapToPropsFunc","createInvalidArgFactory","mapDispatchToPropsFactory","mapDispatchToProps","dispatch"],"mappings":"AAAA,OAAOA,kBAAP,MAA+B,6BAA/B;AACA,SAASC,sBAAT,EAAiCC,kBAAjC,QAA2D,kBAA3D;AACA,SAASC,uBAAT,QAAwC,qBAAxC;AACA,OAAO,SAASC,yBAAT,CAAmCC,kBAAnC,EAAuD;AAC5D,SAAOA,kBAAkB,IAAI,OAAOA,kBAAP,KAA8B,QAApD,GAA+DJ,sBAAsB,CAACK,QAAQ,IAAI;AACzGN,EAAAA,kBAAkB,CAACK,kBAAD,EAAqBC,QAArB,CAD0E,CAArF,GAC6C,CAACD,kBAAD,GAAsBJ,sBAAsB,CAACK,QAAQ,KAAK;AAC5GA,IAAAA;AAD4G,GAAL,CAAT,CAA5C,GAE9C,OAAOD,kBAAP,KAA8B,UAA9B,GAA2C;AACjDH,EAAAA,kBAAkB,CAACG,kBAAD,EAAqB,oBAArB,CADZ,GACyDF,uBAAuB,CAACE,kBAAD,EAAqB,oBAArB,CAJtF;AAKD","sourcesContent":["import bindActionCreators from '../utils/bindActionCreators';\nimport { wrapMapToPropsConstant, wrapMapToPropsFunc } from './wrapMapToProps';\nimport { createInvalidArgFactory } from './invalidArgFactory';\nexport function mapDispatchToPropsFactory(mapDispatchToProps) {\n  return mapDispatchToProps && typeof mapDispatchToProps === 'object' ? wrapMapToPropsConstant(dispatch => // @ts-ignore\n  bindActionCreators(mapDispatchToProps, dispatch)) : !mapDispatchToProps ? wrapMapToPropsConstant(dispatch => ({\n    dispatch\n  })) : typeof mapDispatchToProps === 'function' ? // @ts-ignore\n  wrapMapToPropsFunc(mapDispatchToProps, 'mapDispatchToProps') : createInvalidArgFactory(mapDispatchToProps, 'mapDispatchToProps');\n}"]},"metadata":{},"sourceType":"module"}