{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport verifyPlainObject from '../utils/verifyPlainObject';\nimport { createInvalidArgFactory } from './invalidArgFactory';\nexport function defaultMergeProps(stateProps, dispatchProps, ownProps) {\n  // @ts-ignore\n  return _extends({}, ownProps, stateProps, dispatchProps);\n}\nexport function wrapMergePropsFunc(mergeProps) {\n  return function initMergePropsProxy(dispatch, _ref) {\n    let {\n      displayName,\n      areMergedPropsEqual\n    } = _ref;\n    let hasRunOnce = false;\n    let mergedProps;\n    return function mergePropsProxy(stateProps, dispatchProps, ownProps) {\n      const nextMergedProps = mergeProps(stateProps, dispatchProps, ownProps);\n\n      if (hasRunOnce) {\n        if (!areMergedPropsEqual(nextMergedProps, mergedProps)) mergedProps = nextMergedProps;\n      } else {\n        hasRunOnce = true;\n        mergedProps = nextMergedProps;\n        if (process.env.NODE_ENV !== 'production') verifyPlainObject(mergedProps, displayName, 'mergeProps');\n      }\n\n      return mergedProps;\n    };\n  };\n}\nexport function mergePropsFactory(mergeProps) {\n  return !mergeProps ? () => defaultMergeProps : typeof mergeProps === 'function' ? wrapMergePropsFunc(mergeProps) : createInvalidArgFactory(mergeProps, 'mergeProps');\n}","map":{"version":3,"sources":["/home/hp/MICROVERSE/React.js/week3/solo-projects/React-Bookstore/node_modules/react-redux/es/connect/mergeProps.js"],"names":["_extends","verifyPlainObject","createInvalidArgFactory","defaultMergeProps","stateProps","dispatchProps","ownProps","wrapMergePropsFunc","mergeProps","initMergePropsProxy","dispatch","displayName","areMergedPropsEqual","hasRunOnce","mergedProps","mergePropsProxy","nextMergedProps","process","env","NODE_ENV","mergePropsFactory"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,iBAAP,MAA8B,4BAA9B;AACA,SAASC,uBAAT,QAAwC,qBAAxC;AACA,OAAO,SAASC,iBAAT,CAA2BC,UAA3B,EAAuCC,aAAvC,EAAsDC,QAAtD,EAAgE;AACrE;AACA,SAAON,QAAQ,CAAC,EAAD,EAAKM,QAAL,EAAeF,UAAf,EAA2BC,aAA3B,CAAf;AACD;AACD,OAAO,SAASE,kBAAT,CAA4BC,UAA5B,EAAwC;AAC7C,SAAO,SAASC,mBAAT,CAA6BC,QAA7B,QAGJ;AAAA,QAH2C;AAC5CC,MAAAA,WAD4C;AAE5CC,MAAAA;AAF4C,KAG3C;AACD,QAAIC,UAAU,GAAG,KAAjB;AACA,QAAIC,WAAJ;AACA,WAAO,SAASC,eAAT,CAAyBX,UAAzB,EAAqCC,aAArC,EAAoDC,QAApD,EAA8D;AACnE,YAAMU,eAAe,GAAGR,UAAU,CAACJ,UAAD,EAAaC,aAAb,EAA4BC,QAA5B,CAAlC;;AAEA,UAAIO,UAAJ,EAAgB;AACd,YAAI,CAACD,mBAAmB,CAACI,eAAD,EAAkBF,WAAlB,CAAxB,EAAwDA,WAAW,GAAGE,eAAd;AACzD,OAFD,MAEO;AACLH,QAAAA,UAAU,GAAG,IAAb;AACAC,QAAAA,WAAW,GAAGE,eAAd;AACA,YAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2ClB,iBAAiB,CAACa,WAAD,EAAcH,WAAd,EAA2B,YAA3B,CAAjB;AAC5C;;AAED,aAAOG,WAAP;AACD,KAZD;AAaD,GAnBD;AAoBD;AACD,OAAO,SAASM,iBAAT,CAA2BZ,UAA3B,EAAuC;AAC5C,SAAO,CAACA,UAAD,GAAc,MAAML,iBAApB,GAAwC,OAAOK,UAAP,KAAsB,UAAtB,GAAmCD,kBAAkB,CAACC,UAAD,CAArD,GAAoEN,uBAAuB,CAACM,UAAD,EAAa,YAAb,CAA1I;AACD","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport verifyPlainObject from '../utils/verifyPlainObject';\nimport { createInvalidArgFactory } from './invalidArgFactory';\nexport function defaultMergeProps(stateProps, dispatchProps, ownProps) {\n  // @ts-ignore\n  return _extends({}, ownProps, stateProps, dispatchProps);\n}\nexport function wrapMergePropsFunc(mergeProps) {\n  return function initMergePropsProxy(dispatch, {\n    displayName,\n    areMergedPropsEqual\n  }) {\n    let hasRunOnce = false;\n    let mergedProps;\n    return function mergePropsProxy(stateProps, dispatchProps, ownProps) {\n      const nextMergedProps = mergeProps(stateProps, dispatchProps, ownProps);\n\n      if (hasRunOnce) {\n        if (!areMergedPropsEqual(nextMergedProps, mergedProps)) mergedProps = nextMergedProps;\n      } else {\n        hasRunOnce = true;\n        mergedProps = nextMergedProps;\n        if (process.env.NODE_ENV !== 'production') verifyPlainObject(mergedProps, displayName, 'mergeProps');\n      }\n\n      return mergedProps;\n    };\n  };\n}\nexport function mergePropsFactory(mergeProps) {\n  return !mergeProps ? () => defaultMergeProps : typeof mergeProps === 'function' ? wrapMergePropsFunc(mergeProps) : createInvalidArgFactory(mergeProps, 'mergeProps');\n}"]},"metadata":{},"sourceType":"module"}