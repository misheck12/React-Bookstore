{"ast":null,"code":"import React, { useMemo } from 'react';\nimport { ReactReduxContext } from './Context';\nimport { createSubscription } from '../utils/Subscription';\nimport { useIsomorphicLayoutEffect } from '../utils/useIsomorphicLayoutEffect';\n\nfunction Provider(_ref) {\n  let {\n    store,\n    context,\n    children,\n    serverState\n  } = _ref;\n  const contextValue = useMemo(() => {\n    const subscription = createSubscription(store);\n    return {\n      store,\n      subscription,\n      getServerState: serverState ? () => serverState : undefined\n    };\n  }, [store, serverState]);\n  const previousState = useMemo(() => store.getState(), [store]);\n  useIsomorphicLayoutEffect(() => {\n    const {\n      subscription\n    } = contextValue;\n    subscription.onStateChange = subscription.notifyNestedSubs;\n    subscription.trySubscribe();\n\n    if (previousState !== store.getState()) {\n      subscription.notifyNestedSubs();\n    }\n\n    return () => {\n      subscription.tryUnsubscribe();\n      subscription.onStateChange = undefined;\n    };\n  }, [contextValue, previousState]);\n  const Context = context || ReactReduxContext; // @ts-ignore 'AnyAction' is assignable to the constraint of type 'A', but 'A' could be instantiated with a different subtype\n\n  return /*#__PURE__*/React.createElement(Context.Provider, {\n    value: contextValue\n  }, children);\n}\n\nexport default Provider;","map":{"version":3,"sources":["/home/hp/MICROVERSE/React.js/week3/solo-projects/React-Bookstore/node_modules/react-redux/es/components/Provider.js"],"names":["React","useMemo","ReactReduxContext","createSubscription","useIsomorphicLayoutEffect","Provider","store","context","children","serverState","contextValue","subscription","getServerState","undefined","previousState","getState","onStateChange","notifyNestedSubs","trySubscribe","tryUnsubscribe","Context","createElement","value"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,SAASC,iBAAT,QAAkC,WAAlC;AACA,SAASC,kBAAT,QAAmC,uBAAnC;AACA,SAASC,yBAAT,QAA0C,oCAA1C;;AAEA,SAASC,QAAT,OAKG;AAAA,MALe;AAChBC,IAAAA,KADgB;AAEhBC,IAAAA,OAFgB;AAGhBC,IAAAA,QAHgB;AAIhBC,IAAAA;AAJgB,GAKf;AACD,QAAMC,YAAY,GAAGT,OAAO,CAAC,MAAM;AACjC,UAAMU,YAAY,GAAGR,kBAAkB,CAACG,KAAD,CAAvC;AACA,WAAO;AACLA,MAAAA,KADK;AAELK,MAAAA,YAFK;AAGLC,MAAAA,cAAc,EAAEH,WAAW,GAAG,MAAMA,WAAT,GAAuBI;AAH7C,KAAP;AAKD,GAP2B,EAOzB,CAACP,KAAD,EAAQG,WAAR,CAPyB,CAA5B;AAQA,QAAMK,aAAa,GAAGb,OAAO,CAAC,MAAMK,KAAK,CAACS,QAAN,EAAP,EAAyB,CAACT,KAAD,CAAzB,CAA7B;AACAF,EAAAA,yBAAyB,CAAC,MAAM;AAC9B,UAAM;AACJO,MAAAA;AADI,QAEFD,YAFJ;AAGAC,IAAAA,YAAY,CAACK,aAAb,GAA6BL,YAAY,CAACM,gBAA1C;AACAN,IAAAA,YAAY,CAACO,YAAb;;AAEA,QAAIJ,aAAa,KAAKR,KAAK,CAACS,QAAN,EAAtB,EAAwC;AACtCJ,MAAAA,YAAY,CAACM,gBAAb;AACD;;AAED,WAAO,MAAM;AACXN,MAAAA,YAAY,CAACQ,cAAb;AACAR,MAAAA,YAAY,CAACK,aAAb,GAA6BH,SAA7B;AACD,KAHD;AAID,GAfwB,EAetB,CAACH,YAAD,EAAeI,aAAf,CAfsB,CAAzB;AAgBA,QAAMM,OAAO,GAAGb,OAAO,IAAIL,iBAA3B,CA1BC,CA0B6C;;AAE9C,SAAO,aAAaF,KAAK,CAACqB,aAAN,CAAoBD,OAAO,CAACf,QAA5B,EAAsC;AACxDiB,IAAAA,KAAK,EAAEZ;AADiD,GAAtC,EAEjBF,QAFiB,CAApB;AAGD;;AAED,eAAeH,QAAf","sourcesContent":["import React, { useMemo } from 'react';\nimport { ReactReduxContext } from './Context';\nimport { createSubscription } from '../utils/Subscription';\nimport { useIsomorphicLayoutEffect } from '../utils/useIsomorphicLayoutEffect';\n\nfunction Provider({\n  store,\n  context,\n  children,\n  serverState\n}) {\n  const contextValue = useMemo(() => {\n    const subscription = createSubscription(store);\n    return {\n      store,\n      subscription,\n      getServerState: serverState ? () => serverState : undefined\n    };\n  }, [store, serverState]);\n  const previousState = useMemo(() => store.getState(), [store]);\n  useIsomorphicLayoutEffect(() => {\n    const {\n      subscription\n    } = contextValue;\n    subscription.onStateChange = subscription.notifyNestedSubs;\n    subscription.trySubscribe();\n\n    if (previousState !== store.getState()) {\n      subscription.notifyNestedSubs();\n    }\n\n    return () => {\n      subscription.tryUnsubscribe();\n      subscription.onStateChange = undefined;\n    };\n  }, [contextValue, previousState]);\n  const Context = context || ReactReduxContext; // @ts-ignore 'AnyAction' is assignable to the constraint of type 'A', but 'A' could be instantiated with a different subtype\n\n  return /*#__PURE__*/React.createElement(Context.Provider, {\n    value: contextValue\n  }, children);\n}\n\nexport default Provider;"]},"metadata":{},"sourceType":"module"}