{"ast":null,"code":"// import axios from 'axios';\nconst ADD_BOOK = 'bookStore/books/ADD_BOOK';\nconst REMOVE_BOOK = 'bookStore/books/REMOVE_BOOK';\nconst GET_BOOKS = 'bookStore/books/GET_BOOKS';\nconst baseURL = 'https://us-central1-bookstore-api-e63c8.cloudfunctions.net/bookstoreApi/apps/7Qdz6p3vp4ymDH6hhInP/books';\nconst initialState = [];\nexport const addBook = payload => ({\n  type: ADD_BOOK,\n  payload\n});\nexport const getBooks = payload => ({\n  type: GET_BOOKS,\n  payload\n});\nexport const removeBook = payload => ({\n  type: REMOVE_BOOK,\n  payload\n});\n\nconst booksReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_BOOK:\n      return [...state, action.payload];\n\n    case REMOVE_BOOK:\n      return state.filter(book => book.id !== action.payload);\n\n    case GET_BOOKS:\n      return action.payload;\n\n    default:\n      return state;\n  }\n};\n\nexport const getBooksList = () => async dispatch => {\n  const booksList = await fetch(`${baseURL}`).then(response => response.json());\n  const booksID = Object.keys(booksList);\n  const formatedBooks = [];\n  booksID.map(key => formatedBooks.push({\n    id: key,\n    title: booksList[key][0].title,\n    category: booksList[key][0].category\n  }));\n  dispatch(getBooks(formatedBooks));\n};\nexport const postBook = newBook => async dispatch => {\n  await fetch(`${baseURL}`, {\n    method: 'POST',\n    body: JSON.stringify({\n      item_id: newBook.id,\n      title: newBook.title,\n      category: newBook.category\n    }),\n    headers: {\n      'Content-type': 'application/json; charset=UTF-8'\n    }\n  });\n  dispatch(addBook(newBook));\n};\nexport const deleteBook = id => async dispatch => {\n  await fetch(`${baseURL}/${id}`, {\n    method: 'DELETE',\n    body: JSON.stringify({\n      item_id: id\n    }),\n    headers: {\n      'Content-type': 'application/json; charset=UTF-8'\n    }\n  });\n  dispatch(removeBook(id));\n};\nexport default booksReducer;","map":{"version":3,"sources":["/home/hp/MICROVERSE/React.js/week3/solo-projects/React-Bookstore/src/redux/Books/books.js"],"names":["ADD_BOOK","REMOVE_BOOK","GET_BOOKS","baseURL","initialState","addBook","payload","type","getBooks","removeBook","booksReducer","state","action","filter","book","id","getBooksList","dispatch","booksList","fetch","then","response","json","booksID","Object","keys","formatedBooks","map","key","push","title","category","postBook","newBook","method","body","JSON","stringify","item_id","headers","deleteBook"],"mappings":"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","sourcesContent":["// import axios from 'axios';\n\nconst ADD_BOOK = 'bookStore/books/ADD_BOOK';\nconst REMOVE_BOOK = 'bookStore/books/REMOVE_BOOK';\nconst GET_BOOKS = 'bookStore/books/GET_BOOKS';\nconst baseURL = 'https://us-central1-bookstore-api-e63c8.cloudfunctions.net/bookstoreApi/apps/7Qdz6p3vp4ymDH6hhInP/books';\n\nconst initialState = [];\n\nexport const addBook = (payload) => ({\n  type: ADD_BOOK,\n  payload,\n});\n\nexport const getBooks = (payload) => ({\n  type: GET_BOOKS,\n  payload,\n});\n\nexport const removeBook = (payload) => ({\n  type: REMOVE_BOOK,\n  payload,\n});\n\nconst booksReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_BOOK:\n      return [...state, action.payload];\n\n    case REMOVE_BOOK:\n      return state.filter((book) => book.id !== action.payload);\n\n    case GET_BOOKS:\n      return action.payload;\n\n    default:\n      return state;\n  }\n};\n\nexport const getBooksList = () => async (dispatch) => {\n  const booksList = await fetch(`${baseURL}`)\n    .then((response) => response.json());\n  const booksID = Object.keys(booksList);\n  const formatedBooks = [];\n  booksID.map((key) => formatedBooks.push({\n    id: key,\n    title: booksList[key][0].title,\n    category: booksList[key][0].category,\n  }));\n  dispatch(getBooks(formatedBooks));\n};\n\nexport const postBook = (newBook) => async (dispatch) => {\n  await fetch(`${baseURL}`, {\n    method: 'POST',\n    body: JSON.stringify({\n      item_id: newBook.id,\n      title: newBook.title,\n      category: newBook.category,\n    }),\n    headers: {\n      'Content-type': 'application/json; charset=UTF-8',\n    },\n  });\n  dispatch(addBook(newBook));\n};\n\nexport const deleteBook = (id) => async (dispatch) => {\n  await fetch(`${baseURL}/${id}`, {\n    method: 'DELETE',\n    body: JSON.stringify({\n      item_id: id,\n    }),\n    headers: {\n      'Content-type': 'application/json; charset=UTF-8',\n    },\n  });\n  dispatch(removeBook(id));\n};\n\nexport default booksReducer;\n"]},"metadata":{},"sourceType":"module"}